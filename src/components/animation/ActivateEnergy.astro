---
import Lightning from '../Svg/Icons/Lightning.astro';
---

<aside
	id='energise-button-group'
	class='fixed bottom-sm right-sm flex flex-col items-center gap-xs z-[9]'>
	<div
		id='energy-activate-button'
		class='border rounded-full border-green backdrop-blur-lg h-[2.5rem] w-[5rem] relative cursor-pointer group'>
		<div
			id='energy-activate-switch'
			class='absolute left-0 top-0 h-full aspect-square bg-green rounded-full grid place-items-center group-hover:scale-[1.3] transition-all duration-100 ease-in-out'>
			<Lightning />
		</div>
	</div>
	<div class='text-green font-bold'>Energie aktivieren!</div>
</aside>
<script>
	import { gsap } from 'gsap';
	import { ScrollTrigger } from 'gsap/ScrollTrigger';

	const btn = document.getElementById('energy-activate-button');
	const switchIcon = document.getElementById(
		'energy-activate-switch'
	);
	const footer = document.getElementById('index-footer');

	if (btn && switchIcon && footer) {
		const timeline = gsap.timeline({
			defaults: { duration: 0.1, ease: 'power2.out' },
		});

		btn.addEventListener('click', () => {
			timeline
				.to(switchIcon, { right: 0, left: 'auto' })
				.to(btn, { backgroundColor: 'var(--color-green)' }, '<')
				.call(() => {
					footer.scrollIntoView({
						behavior: 'smooth',
						block: 'start',
						inline: 'nearest',
					});
				})
				.to(switchIcon, { right: 'auto', left: 0 }, '+=1')
				.to(btn, { backgroundColor: 'transparent' });
		});

		const btnGroup = document.getElementById('energise-button-group');
		if (btnGroup) {
			ScrollTrigger.create({
				trigger: footer,
				start: 'top bottom', // when footer enters the viewport from the bottom
				end: 'bottom bottom', // until footer is fully in view
				onEnter: () => {
					btnGroup.style.display = 'none';
				},
				onLeaveBack: () => {
					btnGroup.style.display = 'flex';
				},
			});
		}
	}
</script>
