---
import { clientLogos } from '../../utils/useClientLogos';
---

<section class='px-sm py-lg'>
	<div
		class='max-w-big mx-auto flex flex-col items-center gap-md overflow-x-hidden'>
		<h2 class='subtitle'>Auswahl unserer Kunden</h2>
		<div class='logo-container relative h-[150px]'>
			{
				clientLogos.map((logo) => (
					<div class='h-full aspect-video absolute'>
						<img
							src={logo.src}
							alt={logo.alt}
							class='w-full h-full object-contain'
						/>
					</div>
				))
			}
		</div>
	</div>
</section>

<script>
	const container =
		document.querySelector<HTMLElement>('.logo-container');
	const imageObjects = container?.querySelectorAll('div');

	let containerOverflowPercentage = 200; // Adjust this when adding more logos

	const setInitialPosition = () => {
		if (window.innerWidth < 768) {
			containerOverflowPercentage = 400;
		} else if (window.innerWidth < 1024) {
			containerOverflowPercentage = 300;
		}
		container?.style.setProperty(
			'width',
			`${100 + containerOverflowPercentage}%`
		);
		imageObjects?.forEach((imgObj, i) => {
			imgObj.style.setProperty(
				'left',
				`${((100 + containerOverflowPercentage) / imageObjects.length) * i}%`
			);
		});
	};
	const animation = () => {
		imageObjects?.forEach((imgObj, i) => {
			const leftValue = parseFloat(
				imgObj.style.getPropertyValue('left')
			);
			if (leftValue <= 0) {
				imgObj.style.setProperty(
					'left',
					`${100 + containerOverflowPercentage}%`
				);
			} else {
				imgObj.style.setProperty('left', `${leftValue - 0.1}%`);
			}
		});
		requestAnimationFrame(animation);
	};

	setInitialPosition();
	requestAnimationFrame(animation);

	window.addEventListener('resize', setInitialPosition);
</script>
