---
const { dailyPercent, daily } = Astro.props;
const currentDate = new Date().toLocaleDateString('de-DE', {
	timeZone: 'Europe/Berlin',
	year: 'numeric',
	month: '2-digit',
	day: '2-digit',
});
---

<section
	id='data-center-section-planing'
	class='max-w-normal mx-auto w-full flex flex-col gap-sm px-sm'>
	<div class='flex flex-col gap-sm'>
		<h2 class='subtitle'>Deutschland gesamt</h2>
		<p class='max-w-sm-paragraph'>
			Wir prognostizieren den geplanten Ausbau von geplanten EE-Anlagen basierend auf den Zielen der
			Bundesregierung Deutschland zum Zeitpunkt [{currentDate}]. Wir stellen die tatsächliche
			Entwicklung Tagesaktuell gegenüber.
		</p>
	</div>
	<div class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-sm'>
		<div
			id='generation-chart-yearly'
			class='bg-lavender w-full aspect-[3/2] rounded-2xl'>
			Card 1
		</div>
		<div
			id='generation-chart-daily'
			class='bg-lavender w-full aspect-[3/2] rounded-2xl md:col-span-2 md:row-span-2 md:col-start-1 md:row-start-1'>
		</div>
		<div
			id='generation-chart-quarterly'
			class='bg-lavender w-full aspect-[3/2] rounded-2xl'>
			Card 3
		</div>
		<div
			class='bg-lavender p-md w-full aspect-[3/2] rounded-2xl flex flex-col h-full justify-end gap-sm'>
			<div class='subtitle text-green'>
				{daily.toFixed(0) + ' GWh'}
			</div>
			<div>Heute Leistung aus Erneuerbaren Energien</div>
		</div>
		<div
			class='bg-lavender p-md w-full aspect-[3/2] rounded-2xl flex flex-col h-full justify-end gap-sm'>
			<div class='subtitle text-green'>
				{(dailyPercent * 100).toFixed(2) + '%'}
			</div>
			<div>Heute Leistung EE von Leistung ges. in Deutschland</div>
		</div>
		<div class='bg-lavender p-md w-full aspect-[3/2] rounded-2xl'>Card 6</div>
	</div>
</section>
<script>
	import Highcharts from 'highcharts';

	document.addEventListener('DOMContentLoaded', () => {
		const chartDaily = document.getElementById('generation-chart-daily');
		const chartQuarterly = document.getElementById('generation-chart-quarterly');
		const chartYearly = document.getElementById('generation-chart-yearly');

		if (!chartDaily || !chartQuarterly || !chartYearly)
			return console.error('Chart element not found');
		createChart(chartDaily, {});
		createChart(chartYearly, {});
		createChart(chartQuarterly, {});
	});

	const createChart = (domEl: HTMLElement, chartData: any) => {
		Highcharts.chart({
			chart: {
				type: 'line',
				renderTo: domEl,
				backgroundColor: 'var(--color-lavender)',
				spacingBottom: 5,
				spacingTop: 10,
				spacingLeft: 0,
				spacingRight: 0,
			},
			credits: {
				enabled: false,
			},
			legend: {
				align: 'right',
				verticalAlign: 'top',
				floating: true,
			},
			title: {
				text: 'Fruit Consumption',
				align: 'left',
				x: 10,
				style: {
					fontSize: '16px',
					fontWeight: 'normal',
				},
			},
			xAxis: {
				categories: ['Apples', 'Bananas', 'Oranges'],
				labels: {
					y: 15,
				},
			},
			yAxis: {
				title: {
					text: 'GWh',
					x: 5,
				},
			},
			series: [
				{
					name: 'Jane',
					data: [1, 0, 4],
				} as Highcharts.SeriesLineOptions, //highcharts bug: not recognizing default typing https://www.highcharts.com/docs/advanced-chart-features/highcharts-typescript-declarations#debugging
				{
					name: 'John',
					data: [5, 7, 3],
				} as Highcharts.SeriesLineOptions,
			],
		});
	};
</script>
